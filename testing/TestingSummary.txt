1) This is a text file that lists and details all tests that have been created thus far.
2) All unit testing is carried out in dark_arts_local/testing/folder_name
3) folder_name corresponds to the folder in src/ which we are testing components of
4) All test input files are written in dark_arts_local/testing/TestingInputs
5) run all tests and only get summary of pass/failure : "ctest"
6) run all tests, output more info to console only if a test fails "ctest ---output-on-failure"
7) run tests with a specific label: "ctest -L label_you_want"
7a) folder names (in lower case) 'should' be defined for all tests, but sometimes the author is lazy...
#################################################################################

cells/  

LogSpacingTest - 2Region_Log_Spacing.xml - LogSpacing.cc
--Test of log spacing.  Cell sizes increase by a factor of 2 from L to R in region 1, and decrease by a factor of 4 from left to right in region 2.
--- Cell spacing widths should be:  1 , 2 , 4 , 8, 16 , 4 , 1 , 0.25
--Testing that two materials are assigned into the proper regions
--Dump Cell_Data to file so that it can be read by LogSpacingRefinementTest

EqualSpacingTest - 1Region_Equal_Spacing.xml - EqualSpacing.cc
--Test of equal spacing.  5 cells, x_left = 1.0; x_right = 22.0

LogSpacingRefinementTest - LogSpacingRefinement.cc - 2Region_Log_Spacing_Refinement.xml
-Read mesh created by LogSpacingTest
-Refine by LogSpacingTest mesh by a factor of 4, verify correctness
-Dump refined mesh to .xml file

#################################################################################

materials/

Unity_Grey_Planck_Test - Unity_Grey_Planck.cc
-- check get_c(), get_planck_grey, get_planck_derivative_grey all work correctly

Materials_Interface_Test - Materials_Interface.cc - One_Cell_Angle_Quadrature.xml
-Test all materials interface functions
-Test MOMENT_PRESERVING cross secction treatment
-Sig_a : Rational
-Sig_s : Polynomial space
-Cv : constant_cv

Interpolating_Test - Interpolating.cc - Crazy_Fem_Strategy.xml
-Test INTERPOLATING cross section treatment
-sig_a : polynomial_space
-sig_s : Rational
-Cv : rational_cv

SLXS_Test - SLXS.cc - SLXS.cc - 2Region_Log_Spacing.xml
-Test SLXS cross section treatment
-sig_a : constant
-sig_s: constant
-Cv : Constant

MMS_Components_Test - MMS_Components.cc - MMS_Sources.xml
-Test all V_MMS_Angle , V_MMS_Space, V_MMS_Time concrete classes for accuracy
-Verify composite MMS_Intensity and MMS_Temperature classes evaluate quantities correctly

MMS_Sources_Test - MMS_Sources.cc - MMS_Sources.xml
-Verify pointwise evaluation of S_I and S_T for MMS problems


#################################################################################

quadrature_fem_math/
P3_Lobatto_Test - P3_Lobatto.cc
--Testing Lobatto Quadrature evaluations (in Quadrule function)

P4_NewtonCotes_Test - P4_NewtonCotes.cc
--Testing closed NewtonCotes quadrature (in Quadrule function)

P2_Gauss_Test - P2_Gauss.cc
--Testing Gauss quadrature (in Quadrule function)

Legendre_Polynomal_Test - Legendre_Polynomial.cc
--Checking Legendre polynomial evaluations of Legendre_Polynomial_Evaluation

Angle_Quadrature_Test- Angle_Quadrature_Test.cc
--Verify functions of Angular_Quadrature test (get_mu , get_w, get_n_grps, n_l_mom, sum_w)

Crazy_Fem_Strategy_Test- Crazy_Fem_Strategy.cc - Crazy_Fem_Strategy.xml
-- cubic dfem trial space, lobatto DFEM points, Interpolatory opacity treatment with P4 Equally_Spaced points
-- Exact matrix integration (via Gauss quadrature using (3 + 1 + 4) points),
-- check that Fem_Quadrature pulls all of the correct quadrature points/weights
-- Check DFEM shape functions

Exact_Integration_Test - Exact_Integration.cc - One_Cell_Angle_Quadrature.xml
-Check mass matrix integration of quadratic dfem with equally spaced DFEM interpolation points, and exact matrix integration

Gauss_Self_Lumping_Test - Gauss_Self_Lumping.cc - Gauss_Self_Lumping.xml
-P4 self lumping Gauss

Lobatto_Self_Lumping_Test - Lobatto_Self_Lumping.cc - 1Region_Equal_Spacing.xml
-P3 self lumping Lobatto

Traditional_Lumping_Test - Traditional_Lumping.cc - Exponential_Time.xml
-P3 equal spacing, traditional lumping


#################################################################################

solvers/

FP_Sweeps_Test - FP_Sweeps.cc - LinearSpaceConstantTime.xml
-- verification of WGRS_FP_Sweeps object using constant time, linear space solution with P4 finite elements

MMS_Intensity_Update_Test - MMS_Intensity_Update.cc - LinearSpaceConstantTime.xml
-- verification of Intensity_Update_Grey object (that uses WGRS_FP_Sweeps) and use as a shared-ptr

Single_Thermal_Iteration_Test - Single_Thermal_Iteration.cc - 

#################################################################################

time_data/

Vector_Time_Data_Test - Vector_Time_Data.cc - 1Region_Equal_Spacing.xml
Ramp_Time_Data - Ramp_Time_Data.cc - 2Region_Log_Spacing.xml
Exponential Time_Data_Test - Exponential_Time_Data.cc - Exponential_Time.xml

#################################################################################

transport_sweep/

SLXS_MMS_Sweep_Matrix_Test - SLXS_MMS_Sweep_Matrix.cc - SLXS_MMS_Sweep_Matrix.xml
-Test evaluation of transport sweep reaction matrices and source moments for the SLXS scheme
-Rational sig_a: 1/T^3
-constant cv = 0.2
-zero sig_s
-T(x,t) = (1cos(pi*t/2 + 0) + 3)*(0.5 + .4x + .3x^2);
-I(\mu,x,t) = 1/2*(1cos(pi*t/2 + 0) + 3)*( 0.2 + 7x^3 )
-Cubic DFEM, Lobatto interpolation points, SLXS cross section treatment
-x \in[0,5] , 9 cells

MMS_BC_Test - MMS_BC.cc - MMS_Source_Test.xml
-Testing BC for radiation using MMS 

Upwinding_Test - Upwinding.cc - MMS_Source_Test.xml

ZeroChangeSweep_Test - ZeroChangeSweep.cc - LinearSpaceConstantTime.xml
-Testing Transport_Sweep object
-Given exact solution for phi_old, expect phi_new to be the same (and exact).
-Testing Temperature_Update_Grey to verify that no update in applied
-Testting K_Temperature to verify correct (zero) change for constant in time solution

#################################################################################

variable_storage/

ConstantTemperatureTest - ConstantTemperature.cc - 2Region_Log_Spacing.xml
-Test constant temperature IC
-Test Temperature_Data_copy
-Test "zero" temperature data constructor
-Test numerical average temperature calculator

ConstantIntensityICTest - ConstantIntensityIC.cc - 2Region_Log_Spacing.xml
-Test constant radiation temperature IC
-Test that set/get pairs store and retieve the same 
-Test "zero" intensity data constructor and ic intensity constructor

ErrPhi_Test - ErrPhi.cc
-  Test set, get, clear functions of Err_Phi objects

ErrTemperature_Test - ErrTemperature.cc 
- Test the set, get, clear functions of Err_Temperature objects

IntensityMomentDataTest - IntensityMomentData.cc - 2Region_Log_Spacing.xml
-Test pass constant intensity ic, make sure the correct average is calculated
-Get norm vector(one group)
-Test zero constructor
-Test copy constructor
-get_cell_angle_integrated_intensity() const;
-get_all_moments() const;
-set_cell_angle_integrated_intensity();
-clear_angle_integrated_intensity();
-normalized_difference() const;
-add_contribution();
-get_phi_norm()

OutputTrialTest - OutputTrial.cc 1Region_Equal_Spacing.xml
-write sample .xml and .txt files for dumping Intensity, Intensty_Moment and Temperature data objects
-visual comparison for correctness

MMS_Intensity_IC_Test - MMS_Intensity_IC.cc
-verify Intensity_Data constructor with MMS ic works correctly

MMS_Temperature_IC_Test - MMS_Temperature_IC.cc
-verify Temperature_Data constructor with MMS ic works correctly

#################################################################################




